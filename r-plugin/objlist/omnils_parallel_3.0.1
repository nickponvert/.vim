clusterApplyfunctionfunctionparallelclNULL	x	fun	...
clusterApplyLBfunctionfunctionparallelclNULL	x	fun	...
clusterCallfunctionfunctionparallelclNULL	fun	...
clusterEvalQfunctionfunctionparallelclNULL	expr
clusterExportfunctionfunctionparallelclNULL	varlist	envir
clusterMapfunctionfunctionparallelclNULL	fun	...	MoreArgsNULL	RECYCLETRUE	SIMPLIFYFALSE	USE.NAMESTRUE	.schedulingc("static", "dynamic")
clusterSetRNGStreamfunctionfunctionparallelclNULL	iseedNULL
clusterSplitfunctionfunctionparallelclNULL	seq
detectCoresfunctionfunctionparallelall.testsFALSE	logicalFALSE
makeClusterfunctionfunctionparallelspec	typegetClusterOption("type")	...
makeForkClusterfunctionfunctionparallelnnodesgetOption("mc.cores", 2L)	...
makePSOCKclusterfunctionfunctionparallelnames	...
mcaffinityfunctionfunctionparallelaffinityNULL
mccollectfunctionfunctionparalleljobs	waitTRUE	timeout0	intermediateFALSE
mclapplyfunctionfunctionparallelX	FUN	...	mc.prescheduleTRUE	mc.set.seedTRUE	mc.silentFALSE	mc.coresgetOption("mc.cores", 2L)	mc.cleanupTRUE	mc.allow.recursiveTRUE
mcmapplyfunctionfunctionparallelFUN	...	MoreArgsNULL	SIMPLIFYTRUE	USE.NAMESTRUE	mc.prescheduleTRUE	mc.set.seedTRUE	mc.silentFALSE	mc.coresgetOption("mc.cores", 2L)	mc.cleanupTRUE
mcparallelfunctionfunctionparallelexpr	name	mc.set.seedTRUE	silentFALSE	mc.affinityNULL	mc.interactiveFALSE
mc.reset.streamfunctionfunctionparallelNO_ARGS
nextRNGStreamfunctionfunctionparallelseed
nextRNGSubStreamfunctionfunctionparallelseed
parApplyfunctionfunctionparallelclNULL	X	MARGIN	FUN	...
parCapplyfunctionfunctionparallelclNULL	x	FUN	...
parLapplyfunctionfunctionparallelclNULL	X	fun	...
parLapplyLBfunctionfunctionparallelclNULL	X	fun	...
parRapplyfunctionfunctionparallelclNULL	x	FUN	...
parSapplyfunctionfunctionparallelclNULL	X	FUN	...	simplifyTRUE	USE.NAMESTRUE
parSapplyLBfunctionfunctionparallelclNULL	X	FUN	...	simplifyTRUE	USE.NAMESTRUE
pvecfunctionfunctionparallelv	FUN	...	mc.set.seedTRUE	mc.silentFALSE	mc.coresgetOption("mc.cores", 2L)	mc.cleanupTRUE
setDefaultClusterfunctionfunctionparallelclNULL
splitIndicesfunctionfunctionparallelnx	ncl
stopClusterfunctionfunctionparallelclNULL
